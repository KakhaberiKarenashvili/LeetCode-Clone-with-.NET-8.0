name: LeetCode-Clone

services:
  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 20s
      timeout: 20s
      retries: 3
    container_name: rabbitmq
    ports:
      - "5672:5672"          # RabbitMQ main port
      - "15672:15672"        # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    restart: always
    networks:
      - compilation

  
  main-app:
    container_name: main-app
    build:
      context: .
      dockerfile: /Services/MainApp/MainApp.Api/Dockerfile
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      Postgres.Db:
        condition: service_healthy
    networks:
      - backend
      - compilation
    ports:
      - 5001:5001

  
  compilation-service:
    container_name: compilation-service
    build:
      context: .
      dockerfile: /Services/Compilation/Compilation.Application/Dockerfile
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - compilation

  
  Postgres.Db:
    image: postgres:latest
    container_name: PostgresDb
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - backend
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
  
volumes:
  database:

networks:
  compilation:
  backend: